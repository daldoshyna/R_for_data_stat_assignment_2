---
title: "Assignment 05: Web scraping and APIs"
author: "Diana Aldoshyna"
format: html
---

<br>

## Task 1. Basic

For the first task I chose to work with a dataset from Wikipedia about **helicopter prison escapes** (simply because it sounded intriguing:)

```{r}
#| label: setup
#| include: false
#| cache: false

if (!require("pacman")) install.packages("pacman")

pacman::p_load(
    tidyverse,
     rvest,
     janitor, 
     httr2,
     jsonlite,
     ggrepel,
     ggmap,
     listviewer,
     RSelenium,
     plotly,
     gt)
```

```{r}
#| label: Import the Data
#| echo: true
#| message: false
#| cache: false

url <- "https://en.wikipedia.org/wiki/List_of_helicopter_prison_escapes"
page <- read_html(url)
page
```

<br>

#### Scraping the data and also cleaning it 
|  - changing the "date" column from char type into data type
|  - getting rid of the "details" column because it's not necessary for the analysis and also has *a lot* of text in it

```{r}
#| label: Make the tibble
#| echo: true
#| message: false
#| cache: false

prison_breaks <-
  page |> 
  html_element("#mw-content-text > div.mw-content-ltr.mw-parser-output > table:nth-child(14)") |> 
  html_table()|> 
  clean_names()|>         
  mutate(date = mdy(date)) |> 
  select(!details)

prison_breaks
```

<br>

#### Visulisations

I made two visualizations: one to show chronological tendencies, and another one to show the number of escapes per country.

```{r}
#| label: Visualisation 1
#| echo: true
#| message: false
#| cache: false
#| column: screen-inset

fig <- prison_breaks |>
  mutate(year = year(date),
         year_cat = case_when(
           (year >= 1970) & (year < 1975) ~ "1970-1975",
           (year >= 1975) & (year < 1980) ~ "1975-1980",
           (year >= 1980) & (year < 1985) ~ "1980-1985",
           (year >= 1985) & (year < 1990) ~ "1985-1990",
           (year >= 1990) & (year < 1995) ~ "1990-1995",
           (year >= 1995) & (year < 2000) ~ "1995-2000",
           (year >= 2000) & (year < 2005) ~ "2000-2005",
           (year >= 2005) & (year < 2010) ~ "2005-2010",
           (year >= 2010) & (year < 2015) ~ "2010-2015",
           (year >= 2015) & (year <= 2020) ~ "2015-2020",
           .default = "?"),
         year_cat = factor(year_cat, levels = c("1970-1975", "1975-1980", "1980-1985", "1985-1990", "1990-1995", "1995-2000", "2000-2005", "2005-2010", "2010-2015", "2015-2020")))|> 
  group_by(year_cat) |>            
  summarise(count = n()) |> 
  
  ggplot(aes(
    x = year_cat, 
    y = count,
    group = 1)) +
  geom_point(color = "blue4", size = 2.5) +
  geom_line(color = "blue4", alpha = 0.4, linewidth = 1.5) +
  labs(x = "Year",
       y = "Total number",
       title = "Number of helicopter prison escapes per five-year period") +
  theme_light()

ggplotly(data = fig)
```

<br>

```{r}
#| label: Visualisation 2
#| echo: true
#| message: false
#| cache: false
#| column: screen-inset

fig <- prison_breaks |>
  
  ggplot(aes(fct_infreq(country))) +
  geom_bar(aes(fill = succeeded)) +
  scale_fill_manual(values = c("Yes" = "steelblue", "No" = "tomato")) +
  labs(x = "Country",
       y = "Number of break-outs",
       title = "Number of helicopter prison escapes per country",
       fill = "Was it successful?") +
  theme_light()

ggplotly(data = fig)
```

<br>

## Task 2. Advanced

For the second task I chose to work with a dataset from NASA about **weather on Mars**. The dataset has information about the *last seven days (sols)*, including information about: 

|  - temperature ("AT"), 
|  - atmospheric pressure ("PRE"), 
|  - horizontal wind speed ("HWS"),
|  - wind direction ("WD")

#### Making a request, creating a dataframe

```{r}
#| label: Getting the data
#| echo: true
#| message: false
#| cache: false
#| column: screen-inset

req <- request("https://api.nasa.gov/insight_weather/")

resp <- req %>%
  req_url_query(
    api_key = Sys.getenv("NASA_API_KEY"),
    feedtype = "json",
    ver = 1.0
  ) %>%
  req_perform()

mars_json <- resp %>%
  resp_body_json() 

# the json here is nested and irregular, so I collected the data sol by sol

sols <- mars_json$sol_keys

mars_data <- map_dfr(sols, function(sol) {
  sol_data <- mars_json[[sol]]
  
  tibble(
    sol = sol,
    AT_av = sol_data$AT$av,
    AT_mn = sol_data$AT$mn,
    AT_mx = sol_data$AT$mx,
    PRE_av = sol_data$PRE$av,
    PRE_mn = sol_data$PRE$mn,
    PRE_mx = sol_data$PRE$mx,
    HWS_av = sol_data$HWS$av,
    HWS_mn = sol_data$HWS$mn,
    HWS_mx = sol_data$HWS$mx,
    WD_compass_degrees = sol_data$WD$most_common$compass_degrees,
    Season = sol_data$Season,
    Month_ordinal = sol_data$Month_ordinal
  )
})

# the temperature here is in Fahrenheits, so I changed it into Celsius

mars_data <- mars_data |> 
  mutate(AT_av = (AT_av - 32) / 1.8,
         AT_mn = (AT_mn - 32) / 1.8,
         AT_mx = (AT_mx - 32) / 1.8) 

mars_data |> gt()
```

<br>

#### Visualizations

I made one visualization to show how temperature (max, min and average) changed throughout the days, and another one to picture the wind rose for the most recent sol.

```{r}
#| label: Temperature changes
#| echo: true
#| message: false
#| cache: false
#| column: body

fig <- mars_data |>
  
  ggplot(aes(x = as.numeric(sol))) +
  geom_point(aes(y = AT_av), color = "blue4", size = 2.5) +
  geom_line(aes(y = AT_av), color = "blue4", alpha = 0.4, linewidth = 1.5) +
  
  geom_point(aes(y = AT_mn), color = "blue3", size = 2.5) +
  geom_line(aes(y = AT_mn), color = "blue3", alpha = 0.4, linewidth = 1.5) +
  
  geom_point(aes(y = AT_mx), color = "blue2", size = 2.5) +
  geom_line(aes(y = AT_mx), color = "blue2", alpha = 0.4, linewidth = 1.5) +
  
  labs(x = "Sol",
       y = "Temperature, C",
       title = "Max, Avg and Min temperature changes throughout the days") +
  theme_light()

ggplotly(data = fig)
```

<br>

```{r}
#| label: Wind map
#| echo: true
#| message: false
#| cache: false

last_sol <- names(mars_json)[7]
wd_data <- mars_json[[last_sol]]$WD
wd_data <- wd_data[names(wd_data) != "most_common"]

wd_tibble <- bind_rows(wd_data) |> 
  select(compass_point, ct)

if (nrow(wd_tibble |> filter(compass_point == "E")) == 0) {
  wd_tibble <- wd_tibble |> 
  add_row(compass_point = "E",
          ct = 0)
}

wd_tibble <- wd_tibble |> 
  mutate(compass_point = factor(compass_point, levels = c("N", "NNE", "NE", "ENE", "E", "ESE", "SE", "SSE", "S", "SSW", "SW", "WSW", "W", "WNW", "NW", "NNW")))

wd_tibble |> 
ggplot(aes(x = compass_point,
           y = ct)) +
  geom_col(width = 0.95, fill = "steelblue") +
  coord_polar(start = -pi/16) +
  labs(
    title = "Wind Direction Distribution on the last recorded Sol",
    x = "",
    y = "The number of samples"
  ) +
  theme_minimal()

```